---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Renovate"

on:
  repository_dispatch:
    types: [Renovate]

  workflow_dispatch:
    inputs:
      dryRun:
        description: Dry Run
        type: boolean
        default: false
        required: false
      logLevel:
        description: Log Level
        type: string
        default: debug
        required: false
      version:
        description: Renovate version
        type: string
        default: latest
        required: false
      repo:
        description: Specify Repo
        type: string
        default: ""
        required: false

  schedule:
    - cron: "0 * * * *"
  push:
    branches: ["main"]
    paths:
      - .github/renovate.json5
      - "**/**.json"
      - "**/**.json5"

# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
#   cancel-in-progress: true

# Retrieve BOT_USER_ID via `curl -s "https://api.github.com/users/${BOT_USERNAME}%5Bbot%5D" | jq .id`
env:
  WORKFLOW_DRY_RUN: ${{ inputs.dryRun == true }}
  WORKFLOW_LOG_LEVEL: debug
  WORKFLOW_VERSION: latest
  RENOVATE_PLATFORM: github
  RENOVATE_PLATFORM_COMMIT: true
  RENOVATE_ONBOARDING_CONFIG_FILE_NAME: .github/renovate.json5
  RENOVATE_AUTODISCOVER: true
  INCLUDE_ARCHIVED: false

jobs:
  generate-matrix:
    name: Generate Repo Matrix
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.repo.outputs.repos }}
    steps:
      - name: Get Repo List
        id: repo
        shell: bash
        run: |
          if [ -z "${{ inputs.repo }}" ] && [ -z "${{ github.event.client_payload.repo }}" ]; then
            echo repos=$(curl -sL -H "Authorization: Bearer ${{ secrets.LIST_REPOS_PAT }}" "https://api.github.com/user/repos?per_page=100" | jq '[.[] | select(.archived == ${{ env.INCLUDE_ARCHIVED }}) | .name]') >> $GITHUB_OUTPUT
          elif [ -n "${{ inputs.repo }}" ]; then
            echo repos='["${{ inputs.repo }}"]' >> $GITHUB_OUTPUT
          elif [ -n "${{ github.event.client_payload.repo }}" ]; then
            echo repos='["${{ github.event.client_payload.repo }}"]' >> $GITHUB_OUTPUT
          fi

      - name: show output
        run: |
          echo "repos: ${{ toJson(steps.repo.outputs.repos) }}" >> $GITHUB_STEP_SUMMARY

  renovate:
    name: Renovate
    needs: [generate-matrix]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        repo: ["${{ fromJson(needs.generate-matrix.outputs.repos) }}"]
    env:
      RENOVATE_AUTODISCOVER_FILTER: "${{ github.repository_owner }}/${{ matrix.repo }}"
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@0f859bf9e69e887678d5bbfbee594437cb440ffe # v2.1.0
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"
          owner: "${{ github.repository_owner }}"

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Override default config from dispatch variables
        shell: bash
        run: |
          echo "RENOVATE_DRY_RUN=${{ github.event.inputs.dryRun || env.WORKFLOW_DRY_RUN }}" >> "${GITHUB_ENV}"
          echo "LOG_LEVEL=${{ github.event.inputs.logLevel || env.WORKFLOW_LOG_LEVEL }}" >> "${GITHUB_ENV}"

      - name: Renovate
        uses: renovatebot/github-action@85b17ebd5abf43d1c34c01bd4c8dbb8d45bbc2c7 # v43.0.7
        with:
          configurationFile: "${{ env.RENOVATE_ONBOARDING_CONFIG_FILE_NAME }}"
          token: "${{ steps.app-token.outputs.token }}"
          renovate-version: "${{ github.event.inputs.version || env.WORKFLOW_VERSION }}"
